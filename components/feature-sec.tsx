"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { ChevronDown } from "lucide-react"

type FAQItem = {
  question: string
  answer: string
}

const faqs: FAQItem[] = [
  {
    question: "What is PipFarm?",
    answer:
      "PipFarm is a proprietary trading firm offering remote traders an opportunity to join the company and trade firm capital. Traders who pass our testing process are onboarded as external contractors and remunerated based on their performance.",
  },
  {
    question: "How does PipFarm make money",
    answer:
      "PipFarm makes money through evaluation fees and by taking a percentage of the profits generated by successful traders. Our business model is designed to align our interests with those of our traders - when you succeed, we succeed.",
  },
  {
    question: "What trading strategies are prohibited?",
    answer:
      "We welcome every trading strategy except those designed to exploit our program. Prohibited strategies include arbitrage, grid trading without stop losses, excessive risk-taking, and any form of market manipulation. Full details are provided in our terms and conditions.",
  },
  {
    question: "What platforms do you support?",
    answer:
      "We support the cTrader platform, which offers advanced charting, one-click trading, and a range of technical indicators. The platform is available on desktop and mobile devices.",
  },
  {
    question: "How long does the evaluation process take?",
    answer:
      "The evaluation process is a single stage with no time limit. You can take as long as you need to reach the profit target, as long as you don't breach any of the trading rules.",
  },
  {
    question: "How quickly will I receive my payouts?",
    answer:
      "Payouts are processed within 48 hours of invoice generation. Our payroll system handles all fees and taxes in your country so that you can focus on trading.",
  },
]

export default function FAQSection() {
  const [expandedIndex, setExpandedIndex] = useState(0)
  const [showAll, setShowAll] = useState(false)

  const visibleFaqs = showAll ? faqs : faqs.slice(0, 3)

  const toggleFaq = (index: number) => {
    setExpandedIndex(expandedIndex === index ? -1 : index)
  }

  return (
    <div className="py-20 px-4 md:px-8 lg:px-20 max-w-[1440px] mx-auto">
      <div className="flex flex-col md:flex-row gap-8 md:gap-16 items-center">
        <div className="md:w-[40%]">
          <h2 className="text-[32px] md:text-[40px] lg:text-[48px] text-[#2e3b7d] mb-8 font-violet-sans  font-normal text-center md:text-left">Frequently asked Questions</h2>

          <Button
            onClick={() => setShowAll(!showAll)}
            className="bg-gradient-to-r from-[#14AAF5] to-[#7ECEFF] hover:opacity-90 transition-opacity text-white font-normal w-[150px] md:w-[242px] h-[50px] md:h-[73px] flex justify-center items-center text-[16px] md:text-[18px] rounded-[16px] font-inter mx-auto md:mx-0"
          >
            {showAll ? "Show Less" : "See More"}
          </Button>
        </div>

        <div className="md:w-[55%] space-y-6">
          {visibleFaqs.map((faq, index) => (
            <div
              key={index}
              className="bg-[#f8faff] rounded-[24px] shadow-[0_8px_30px_rgba(0,0,0,0.06)] overflow-hidden"
            >
              <button
                onClick={() => toggleFaq(index)}
                className="w-full text-left p-6 flex justify-between items-center"
              >
                <h3 className="text-[20px] font-normal text-[#2e3b7d] font-violet-sans">{faq.question}</h3>
                <ChevronDown
                  className={`text-[#39b4ff] transition-transform duration-300 ${expandedIndex === index ? "rotate-180" : ""}`}
                  size={24}
                />
              </button>

              <div
                className={`overflow-hidden transition-all duration-300 ease-in-out ${
                  expandedIndex === index ? "max-h-[1000px] opacity-100" : "max-h-0 opacity-0"
                }`}
              >
                <div className="px-6 pb-6">
                  <p className="text-[#2e3b7d] leading-relaxed font-poppins font-normal">{faq.answer}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

